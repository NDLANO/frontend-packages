name: CI
on: [push, pull_request]
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.CI_AWS_CLIENT_ID }}
  AWS_DEFAULT_REGION: "eu-west-1"
  AWS_SECRET_ACCESS_KEY: ${{ secrets.CI_AWS_CLIENT_SECRET }}
  NDLA_AWS_ECR_REPO: ${{ secrets.NDLA_AWS_ECR_REPO }}
  CI_RELEASE_ROLE: ${{ secrets.CI_RELEASE_ROLE }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  NDLA_RELEASES: ${{ secrets.NDLA_RELEASES }}
  GH_TOKEN: ${{ secrets.CI_NOW_GH_TOKEN }}
  NOW_TOKEN: ${{ secrets.NOW_TOKEN }}
  GH_PR_NUMBER: ${{ github.event.number }}
  GH_PR_REPO: ${{ github.event.pull_request.head.repo.full_name }}
  GH_PR_SHA: ${{ github.event.pull_request.head.sha }}
jobs:
  unit_tests:
    name: "Unit tests"
    runs-on: ubuntu-latest
    steps:
      - name: "Jonas tests stuff"
        run: |
          echo "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
          echo "GITHUB_ACTOR=$GITHUB_ACTOR"
          echo "GITHUB_EVENT_NAME=$GITHUB_EVENT_NAME"
          echo "GITHUB_EVENT_PATH=$GITHUB_EVENT_PATH"
          echo "GH_PR_NUMBER=$GH_PR_NUMBER"
          echo "GH_PR_REPO=$GH_PR_REPO"
          echo "GITHUB_SHA=$GITHUB_SHA"
          echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
          echo "cat GITHUB_EVENT_PATH:"
          cat $GITHUB_EVENT_PATH
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '10'
      - name: "Login to ECR repo"
        run: RES=$(aws sts assume-role --role-arn $CI_RELEASE_ROLE --role-session-name github-actions-ecr-login)
          AWS_ACCESS_KEY_ID=$(echo $RES | jq -r .Credentials.AccessKeyId)
          AWS_SECRET_ACCESS_KEY=$(echo $RES | jq -r .Credentials.SecretAccessKey)
          AWS_SESSION_TOKEN=$(echo $RES | jq -r .Credentials.SessionToken)
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin $NDLA_AWS_ECR_REPO
      - name: "Login to dockerhub"
        run: echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
      - uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            .eslintcache
            ~/.npm
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: "Install"
        run: yarn install --frozen-lockfile
      - name: "Bootstrap"
        run: yarn bootstrap
      - name: "Check-all"
        run: yarn check-all
      - name: "Build storybook"
        run: yarn build-storybook
      - name: "Deploy now build"
        run: yarn ndla-scripts now-github
        continue-on-error: true
