$numerator: auto;
$denominator: auto;

// Expand item
@mixin grids-expand($numerator, $denominator, $expand, $right-aligned: false) {
  $unit: $numerator / $denominator * 100%;
  $width: ($numerator / $denominator) * 100%;
  position: relative !important;
  @if $right-aligned {
    left: auto !important;
    float: right;
    right: -($denominator - $numerator - $expand/2) / $denominator * 100% !important;
  } @else {
    right: auto !important;
    float: left;
    left: -($denominator - $numerator - $expand/2) / $denominator * 100% !important;
  }
  width: $width + $unit !important;
  padding-left: $spacing;
  padding-right: $spacing;
}
// compensate for line-height
$extra-margin: 10px;

@mixin float($cols, $maxcols, $direction) {
  $colDifference: $maxcols - $cols;
  $cols-tablet: $cols - 1;
  @if ($cols == 1) {
    $cols-tablet: 1;
  }

  @if $direction == left {
    @include mq(tablet) {
      float: left;
      clear: left;
      width: ($cols-tablet/$maxcols) * 100% !important;
      left: auto !important;
      padding: 0;
      margin: $spacing ($spacing + $extra-margin) 35px 0;
    }
    @include mq(desktop) {
      width: ($cols/$maxcols) * 100% !important;
      margin: 0 ($spacing + $extra-margin) 35px -25%;
    }
  }
  @if $direction == right {
    @include mq(tablet) {
      float: right;
      clear: right;
      width: ($cols-tablet/$maxcols) * 100% !important;
      left: auto !important;
      padding: 0;
      margin: 0 0 35px ($spacing + $extra-margin);
    }
    @include mq(desktop) {
      width: ($cols/$maxcols) * 100% !important;
      margin: 0 -25% 35px ($spacing + $extra-margin);
    }
  }
}
